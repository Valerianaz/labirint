from pygame import*
class GameSprite(sprite.Sprite):
    def __init__(self,player_image,w,h,x,y):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image),(x,y))
        self.rect = self.image.get_rect()
        self.rect.x= x
        self.rect.y= y
    def reset(self):
        window.blit(self.image,(self.rect.x,self.rect.y))     
class Player(GameSprite):
    def __init__(self,player_image,w,h,x,y,x_speed,y_speed):
        (Sprite):
            Gamesprite.__init__(self,player_image,w,h,x,y)
        self.x_speed = x_speed
        self.y_speed = y_speed 
    def update(self):
        if packman.rect.x <= win_width-80 and packman.x_speed>0 or packman.rect.x>=0 and packman.x_speed<0:    
            self.rect.x += self.x_speed
            platforms_touched= sprite.spritecollide(self,barriers,false)
        if self.x_speed >0:
            for p in platforms_touched:
                self.rect.right =min(self.rect.right,p.rect.left)
        elif self.x_speed <0:
             for p in platforms_touched:   
                self.rect.left =min(self.rect.left,p.rect.right)
        if packman.rect.y <= win_height-80 and packman.y_speed >0 or packman.rect.y>=0 and packman.y_speed<0:    
            self.rect.y += self.y_speed 
            platforms_touched=  sprite.spritecollide(self,barriers,false)
        if self.y_speed>0:
            for p in platforms_touched:
                self.y_speed=0
                if p.rect.top<self.rect.bottom:
                    self.rect.bottom = p.rect.top        
        elif self.y_speed<0:
            for p in platforms_touched:
                self.y_speed=0
                self.rect.top= max(self.rect.top,p.rect.bottom)
    def fire(self): 
        bullet = Bullet('weapon.png',self.rect.right,self.rect.centery,15,20,15)
        bullets.add(bullet)
class Enemy(GameSprite):
    def __init__(self,player_image,w,h,x,y,x_speed,y_speed):
        super().__init__(self,player_image,w,h,x,y,x_speed,y_speed)
        self.speed= speed
    def update (self): 
        direction = 'left'
        speed = 2
        if self.rect.x <=420:
            v1.wall_x = v1.wall_width
            self.side = 'right'
        if monster.rect.y >=  win_width - 85:
            self.side = 'left'
        if self.side == 'left':
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed
class Bullet(GameSprite):
    def __init__(self,player_image,w,h,x,y,x_speed,y_speed):
        super().__init__(self,player_image,w,h,x,y,x_speed,y_speed)
        self.speed= speed
    def update(self):
        self.rect.x += self.speed
        if self.rect.x > win_width +10:
            self.kill()
win_width = 700
win_height = 500
window = display.set_mode((win_width,win_height))
back = (119,210,223)
display.set_caption('лабиринт')
barriers= sprite.Group()
w1=GameSprite('platform2.png',win_width/2 - win_width/3,win_height/2,300,50) 
w2=GameSprite('platform2_v.png',370,100,50,400)
barriers.add(w1)
barriers.add(w2)
pakman=Player('princess_3.png',5,win_height - 80,80,80,0,0)
final=GameSprite('pac-1.png',win_width -85,win_height -100,80,80)
monster= Enemy('boar_001.png',win_width -80,150,80,80,5)
win=transform.scale(image.load('winner.jpg'),(700,500)),(0,0)
lose =transform.scale(image.load('loose.png'),(700,500)),(0,0)
monsters = sprite.Group()
bullets = spritte.Group()
monsters.add(monster)
finish = False
run = True
while run:
    time.delay(50)
    window.blit(player_image,(0,0))
    for e in event.get():
        if e.type==QUIT:
            run=False
        elif e.type == KEYDOWN:
            if e.key == K_LEFT:
                packman.x_speed = -5
            elif e.key == K_RIGHT:
                packman.x_speed = 5
            elif e.Key ==K_UP:
                packman.y_speed= -5
            elif e.Key ==K_DOWN:
                packman.y_speed= 5
        elif e.type == KEYUP:
            if e.key == K_LEFT:
                packman.x_speed = 0
            elif e.key == K_RIGHT:
                packman.x_speed = 0
            elif e.Key ==K_UP:
                packman.y_speed= 0
            elif e.Key ==K_DOWN:
                packman.y_speed= 0
    if not Finish:
        window.fill(back)
        packman.update()
        bullets.update()
        w1.reset() 
        w2.reset()
        barriers.draw(window)
        bullets.draw(window)
        packman.reset()
        final.reset()
        sprite.groupcollidate(monsters,bullet) 
        monsters.update()
        monsters.draw((window))
        sprite.groupcollide(bullets,barriers,True,False)
        if sprite.collide_rect(packman,monster): 
            finish = True
            img = image.load('loose.png')
            d= img.get_width()//img.get_height()
            window.fill((255,255,255))
            window.blit(transform.scale(img,(win_height* d,win_height)),(90,0))
        if  sprite.collide_rect(packman,final):
            finish = True
            img= image.load('winner.Jpg')
            window.fill((255,255,255))
            window.blit(transform.scale(img,(win_width,win_height)), (0,0))    
            time.delay(50)
            display.update()
